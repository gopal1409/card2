sudo -i
##3for user escalation
usermod -aG username docker

###launc your first docker container
 3  docker container run --publish 80:80 --detach nginx
    4  docker ps
    5  docker images
    6  docker container run --publish 80:80 --detach nginx
#####docker command
1  clear
    2  docker run -p 81:80 -d nginx
    3  docker ps
    4  docker run -p 82:80 -d httpd
    5  docker images
    6  docker ps
    7  curl localhost
    8  curl localhost:82

###custom name to your container
 11  docker ps -a
   12  docker run -d -p 83:80 --name=webhost nginx
   13  docker ps
   14  history
   15  docker run -d -p 84:80 --name=webhost nginx

###container vs process
 18  docker ps
   19  docker run -p 85:80 nginx
   20  clear
   21  docker run --name mongo -d mongo
   22  docker ps
   23  clear
   24  docker top mongo
   25  ps aux
   26  kill -9 10425
   27  docker ps
   28  docke rps -a
   29  docker ps -a
   30  history
###to check the logs
41  docker logs d3e
   42  docker logs -f d3e


####how to loging inside a container
45  docker run -d -p 3306:3306 --name db -e MYSQL_RANDOM_ROOT_PASSWORD=true mysql
   46  docker ps
   47  docker logs db
   48  docker exec -it db bash
mysql -u root -p
####get the password from the logs and copy it paste it
#####then exit two times
exit
exit
####docker logs file lcoation
 51  docker ps
   52  docker container inspect db
   53  cd /var/lib/docker/containers/06dfafe9b18b5062653a33b234721f129cd250a35d84de4095802b8219ebf924
   54  ls
   55  cat 06dfafe9b18b5062653a33b234721f129cd250a35d84de4095802b8219ebf924-json.log
###docker networking
25  docker network create my_app_net
   26  docker network ls
   27  docker network inspect my_app_net
   28  docker run -d --name new_nginx --network my_app_net nginx:alpine
   29  docker run -d --name proxy --network my_app_net nginx:alpine
   30  docker ps
 
   32  docker exec -it proxy ping new_nginx
   33  docker exec -it new_nginx ping proxy
   34  docker network inspect my_app_net
